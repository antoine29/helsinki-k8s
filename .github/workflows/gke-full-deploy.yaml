name: GKE full deploy
# builds and deploys the whole application to gke
# ToDo: split and reuse gcp-docker, gcp-kubectl and get-short-commit actions
on:
  workflow_dispatch:
  push:
    paths:
      - 'part2/project/**'
      - '.github/workflows/gke-full-deploy.yaml'
      - 'part3/3.04.Project_v1.4.1/**'

jobs:
  build-and-push:
    name: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image-name: gcr.io/${{ vars.GCP_PROJECT_ID }}/todos-be
            context: part2/project/be/
            dockerfile: part2/project/be/Dockerfile
          - image-name: gcr.io/${{ vars.GCP_PROJECT_ID }}/todos-be-db-migrations
            context: part2/project/be/dbMigrations/
            dockerfile: part2/project/be/dbMigrations/dockerfile
          - image-name: gcr.io/${{ vars.GCP_PROJECT_ID }}/todos-fe
            context: part2/project/fe/
            dockerfile: part2/project/fe/Dockerfile
            build-args: |
              "VITE_API_URL=${{ vars.API_URL }}"
          - image-name: gcr.io/${{ vars.GCP_PROJECT_ID }}/todos-rproxy
            context: part2/project/rproxy/
            dockerfile: part2/project/rproxy/dockerfile
    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
    
    - run: gcloud --quiet auth configure-docker
    
    - name: gcp service account auth
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    - name: Builds metadata (tags, labels) for Docker images
      id: metadata
      uses: docker/metadata-action@v4
      with:
        images: ${{ matrix.image-name }}
        tags: type=sha,prefix=
    
    - name: Build and Push
      uses: docker/build-push-action@v3
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        build-args: ${{ matrix.build-args }}
        platforms: linux/amd64
        push: true
        tags: ${{ steps.metadata.outputs.tags }}


  kustomize-and-apply:
    name: kustomize-and-apply
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - uses: actions/checkout@v2
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - run: gcloud components install kubectl
    
    - name: gcp service account auth
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    - run: gcloud container clusters get-credentials ${{ vars.GKE_CLUSTER }} --zone ${{ vars.GCP_ZONE }}
    
    - name: Get short commit hash
      id: commit-info
      # run: echo "tag=$(git describe --tags HEAD)" > $GITHUB_ENV
      run: |
        COMMIT_SHA="${{ github.sha }}"
        echo "commit_sha=${COMMIT_SHA}" >> $GITHUB_OUTPUT
        echo "commit_sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    # - name: Print commit sha
    #   run: echo "Commit output ${{steps.commit.outputs.commit_sha_short}}"

    - name: Get K8S namespace name
      id: k8s-ns-name
      run: |
        BRANCH_NAME="${{ github.ref_name }}"
        echo "branch name: $BRANCH_NAME"
        if [ "$BRANCH_NAME" == "main" ]; then
          echo "ns=todos-ns" >> $GITHUB_OUTPUT
        else
          echo "ns=todos-"$BRANCH_NAME"-ns" >> $GITHUB_OUTPUT
        fi

    - name: Set up Kustomize
      uses: imranismail/setup-kustomize@v1

    - name: Update kustomization
      working-directory: part3/3.04.Project_v1.4.1
      run: |-
        echo "using k8s ns: ${{ steps.k8s-ns-name.outputs.ns }}"
        if kubectl get ns | grep -q ${{ steps.k8s-ns-name.outputs.ns }}; then
          echo "ns already created"
        else 
          kubectl create namespace ${{ steps.k8s-ns-name.outputs.ns }};
        fi
        kubectl config set-context --current --namespace=${{ steps.k8s-ns-name.outputs.ns }}
        kustomize edit set namespace ${{ steps.k8s-ns-name.outputs.ns }}
        kustomize edit set image BE_IMAGE=gcr.io/${{ vars.GCP_PROJECT_ID }}/todos-be:${{ steps.commit-info.outputs.commit_sha_short }}
        kustomize edit set image BE_DB_MIGRATIONS_IMAGE=gcr.io/${{ vars.GCP_PROJECT_ID }}/todos-be-db-migrations:${{ steps.commit-info.outputs.commit_sha_short }}
        kustomize edit set image FE_IMAGE=gcr.io/${{ vars.GCP_PROJECT_ID }}/todos-fe:${{ steps.commit-info.outputs.commit_sha_short }}
        kustomize edit set image RPROXY_IMAGE=gcr.io/${{ vars.GCP_PROJECT_ID }}/todos-rproxy:${{ steps.commit-info.outputs.commit_sha_short }}
        kubectl apply -k . 
        # kustomize build . -o kustomized
        # cat kustomized
        kubectl rollout status deployment todos-be
        kubectl rollout status deployment todos-fe
        kubectl rollout status deployment todos-rproxy
        kubectl get services -o wide

